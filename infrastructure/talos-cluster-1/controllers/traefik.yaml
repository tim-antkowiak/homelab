---
apiVersion: v1
kind: Namespace
metadata:
  name: traefik
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik
spec:
  interval: 30m
  chart:
    spec:
      chart: traefik
      version: '33.x'
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
      interval: 12h
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  # Wait for MetalLB to be ready before installing Traefik
  dependsOn:
    - name: metallb
      namespace: metallb-system
  values:
    # Global arguments
    globalArguments:
      - "--global.checknewversion"

    # Additional arguments
    additionalArguments:
      - "--serversTransport.insecureSkipVerify=true"
      - "--log.level=INFO"

    # Service configuration - MetalLB will assign an IP
    service:
      enabled: true
      type: LoadBalancer
      annotations: {}

    # Ports configuration
    ports:
      web:
        port: 80
        exposedPort: 80
        protocol: TCP
      websecure:
        port: 443
        exposedPort: 443
        protocol: TCP
        tls:
          enabled: true
      traefik:
        port: 9000
        expose:
          default: false
        exposedPort: 9000
        protocol: TCP

    # Logs
    logs:
      general:
        level: INFO
      access:
        enabled: false

    # HA Deployment configuration
    deployment:
      enabled: true
      kind: Deployment
      replicas: 2  # HA with 2 replicas
      # Pod anti-affinity to spread replicas across nodes
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - traefik
              topologyKey: kubernetes.io/hostname

    # Persistence for SSL certificates (ReadWriteMany for HA)
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 128Mi
      path: /data

    # Resource limits
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "1000m"
        memory: "512Mi"

    # Health checks
    livenessProbe:
      httpGet:
        path: /ping
        port: 9000
      initialDelaySeconds: 10
      periodSeconds: 10

    readinessProbe:
      httpGet:
        path: /ping
        port: 9000
      initialDelaySeconds: 10
      periodSeconds: 10
